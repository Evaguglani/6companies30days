class Solution {
public:
    int longestMountain(vector<int>& arr) {
        
        int l=-1;
        int n=arr.size();
        int count=0;
        int ans=0;
        if(n<3)
        {
            return 0;
        }
       
        
        if(n>=3)
        {
            
          if(arr[0]<arr[1])
          {
              l=0;
          }
            int var=-1;
            for(int j=1;j<n;j++)
            {
                if(arr[j]>arr[j-1])
                {
                    var=1;      //up
                }
                else if(arr[j]<arr[j-1])
                {
                    var=0;      //down
                }
                else if(arr[j]==arr[j-1])
                {
                    if(var==1)      //up
                    {
                        l=-1;
                        
                    }
                    else if(var==0&&l!=-1)
                    {
                        int length=j-l;
                        ans=max(ans,length);
                        //cout<<ans<<" ";
                        l=-1;
                    }
                }
                if(j!=n-1&&arr[j-1]>=arr[j]&&arr[j+1]>arr[j])
                {
                    if(l!=-1)
                    {
                        int length=j-l+1;
                        ans=max(ans,length);
                    }
                    l=j;
                   // cout<<l;
                }
                if(j==n-1&&arr[n-2]>arr[n-1]&&l!=-1)
                {
                    int length=n-l;
                    ans=max(ans,length);
                }
                
            }
          
        }
        
        return ans;
    }
};
